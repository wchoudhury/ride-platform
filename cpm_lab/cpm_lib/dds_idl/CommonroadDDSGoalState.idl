/*
 * Provides commonroad planning problem data to all participants (only goal states, due to size issues for whole planning problem)
 */

#ifndef COMMONROAD_DDS_GOAL_STATE
#define COMMONROAD_DDS_GOAL_STATE

#include "Header.idl"
#include "CommonroadDDSShape.idl"

/**
 * \struct CommonroadDDSInterval
 * \brief An interval with which inexact positions can be provided.
 * If intervals or exact values are possible, intervals with the same start and end value are being provided.
 * \ingroup cpmlib_idl
 */
struct CommonroadDDSInterval {
    double interval_start; //!< First value of the interval
    double interval_end; //!< Last value of the interval
};

/**
 * \struct CommonroadDDSPositionInterval
 * \brief Commonroad inexact (combined from shapes for a position area) position definition
 * \ingroup cpmlib_idl
 */
struct CommonroadDDSPositionInterval {
    sequence<CommonroadDDSCircle> circles; //!< List of circles within which the position could lie
    sequence<CommonroadDDSPolygon> polygons; //!< List of polygons within which the position could lie
    sequence<CommonroadDDSRectangle> rectangles; //!< List of rectangles within which the position could lie
    sequence<long> lanelet_refs; //!< These should rather not be used, because lanelets are currently not being transmitted to the HLCs
};

/**
 * \struct CommonroadDDSGoalState
 * \brief A single commonroad goal state
 * \ingroup cpmlib_idl
 */
struct CommonroadDDSGoalState {
    CommonroadDDSInterval time; //!< Time (interval) when the goal state should be reached, can be undefined (see time_set)
    boolean time_set; //!< If false, ignore time
    boolean has_exact_position; //!< Ignore values in exact_position if this is false, and use positions instead
    CommonroadDDSPoint exact_position; //!< Exact position of the goal state, as a point. Not part of the specs in the documentation, but nice to have
    CommonroadDDSPositionInterval position; //!< Inexact position of the goal state, can be undefined
    CommonroadDDSInterval orientation; //!< Possible orientation value within the goal state, can be undefined
    CommonroadDDSInterval velocity; //!< Possible velocity values when the goal state is reached, can be undefined

    //IDs to relate to planning problem and position in list planning problems and of goal states in planning problems in a single planning problem definition
    //We could not send the whole planning problem due to size issues because of the sequences used

    //! Part of the ID of the goal state: ID of the planning problem
    long planning_problem_id; //@key

    //! Part of the ID of the goal state: Place within the list of goal states within a planning "sub"-problem
    long goal_state_pos; //@key
};

#endif